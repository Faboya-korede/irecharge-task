name: Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout   

 
jobs:
  PUSH-IMAGE:
    runs-on: ubuntu-latest

    steps:
    - name: checkout 
      uses: actions/checkout@v3

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
         role-session-name: GitHub_to_AWS_${{ github.job }}_${{ github.run_id }}
         aws-region: ${{ secrets.AWS_REGION }} 

    - name: Login to Amazon ECR Public
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
       

    - name: Build, tag, and push image to Aws ECR
      working-directory: node-project
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  terraform:
    needs: PUSH-IMAGE
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
           role-to-assume: ${{ secrets.AWS_ROLE_ARN  }}
           role-session-name: GitHub_to_AWS_${{ github.job }}_${{ github.run_id }}
           aws-region: ${{ secrets.AWS_REGION }} 
  

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/  

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: terraform/  
